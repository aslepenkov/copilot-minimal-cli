name: Test PR and Comment Results

on:
  pull_request:
    branches: [ arch-refactor, master ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ arch-refactor, master]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
        
    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile
      
    - name: Run tests
      id: test
      run: |
        # Run tests and capture output
        pnpm test > test-output.txt 2>&1
        TEST_EXIT_CODE=$?
        
        # Save test results
        echo "exit_code=$TEST_EXIT_CODE" >> $GITHUB_OUTPUT
        
        # Always exit with 0 to allow comment posting even if tests fail
        exit 0
        
    - name: Read test output
      id: test_output
      run: |
        if [ -f test-output.txt ]; then
          # Read the test output and prepare for GitHub output
          TEST_OUTPUT=$(cat test-output.txt | head -50)  # Limit to first 50 lines
          echo "content<<EOF" >> $GITHUB_OUTPUT
          echo "$TEST_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "content=No test output found" >> $GITHUB_OUTPUT
        fi
        
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const testExitCode = '${{ steps.test.outputs.exit_code }}';
          const testOutput = `${{ steps.test_output.outputs.content }}`;
          
          const success = testExitCode === '0';
          const statusIcon = success ? '✅' : '❌';
          const statusText = success ? 'PASSED' : 'FAILED';
          
          const comment = `## ${statusIcon} Test Results - ${statusText}
          
          **Branch:** \`${{ github.head_ref }}\`
          **Commit:** \`${{ github.sha }}\`
          
          ### Test Output
          <details>
          <summary>Click to view test details</summary>
          
          \`\`\`
          ${testOutput}
          \`\`\`
          </details>
          
          ---
          *Generated by GitHub Actions on ${new Date().toISOString()}*`;
          
          // Find existing comment from this workflow
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.data.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('Test Results -')
          );
          
          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: comment
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });
          }
          
    - name: Fail job if tests failed
      if: steps.test.outputs.exit_code != '0'
      run: |
        echo "Tests failed with exit code ${{ steps.test.outputs.exit_code }}"
        exit 1
